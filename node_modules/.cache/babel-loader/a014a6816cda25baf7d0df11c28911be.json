{"remainingRequest":"C:\\Users\\tyt\\Desktop\\编程\\vscode\\华北五省\\goods_project\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\tyt\\Desktop\\编程\\vscode\\华北五省\\goods_project\\src\\api\\message.js","dependencies":[{"path":"C:\\Users\\tyt\\Desktop\\编程\\vscode\\华北五省\\goods_project\\src\\api\\message.js","mtime":1602248970424},{"path":"C:\\Users\\tyt\\Desktop\\编程\\vscode\\华北五省\\goods_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1597490030034},{"path":"C:\\Users\\tyt\\Desktop\\编程\\vscode\\华北五省\\goods_project\\node_modules\\babel-loader\\lib\\index.js","mtime":1597490029689}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\tyt\\\\Desktop\\\\\\u7F16\\u7A0B\\\\vscode\\\\\\u534E\\u5317\\u4E94\\u7701\\\\goods_project\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport config from \"@/config/config.json\";\nimport socket from \"./websocket\";\nexport default {\n  //请求所有信息\n  freshMessage: function () {\n    var _freshMessage = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(data, vm) {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              vm.$store.commit(\"changeLayShow\");\n              _context.next = 3;\n              return apiWarp(\"/findByUserName\", data, \"post\").then(function (res) {\n                console.log(res);\n                var data = res.data; //插入数据\n\n                vm.userList = data;\n              }).catch(function (err) {\n                console.log(err);\n              });\n\n            case 3:\n              setTimeout(function () {\n                vm.$store.commit(\"changeLayShow\");\n              }, 500);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function freshMessage(_x, _x2) {\n      return _freshMessage.apply(this, arguments);\n    }\n\n    return freshMessage;\n  }(),\n  //具体历史信息\n  specificMessage: function () {\n    var _specificMessage = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(data, vm) {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              vm.$store.commit(\"changeLayShow\");\n              _context2.next = 3;\n              return apiWarp(\"/findChatRecord\", data, \"post\").then(function (res) {\n                console.log(res);\n\n                if (res.data != null) {\n                  res.data.forEach(function (val) {\n                    if (val.fromUser === data.friendName) {\n                      //好友发送的消息\n                      vm.chatRoom.list.push({\n                        component: 'leftMsg',\n                        content: val.content\n                      });\n                    } else {\n                      //用户自己发送的消息\n                      vm.chatRoom.list.push({\n                        component: 'rightMsg',\n                        content: val.content\n                      });\n                    }\n                  });\n                } else {\n                  vm.$notify({\n                    type: \"warning\",\n                    message: '连接错误'\n                  });\n                }\n              }).catch(function (err) {\n                console.log(err);\n              });\n\n            case 3:\n              setTimeout(function () {\n                vm.$store.commit(\"changeLayShow\");\n              }, 500);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function specificMessage(_x3, _x4) {\n      return _specificMessage.apply(this, arguments);\n    }\n\n    return specificMessage;\n  }(),\n  //websocket连接交流\n  chatConnect: function () {\n    var _chatConnect = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(data, vm) {\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              vm.$store.commit(\"changeLayShow\"); //存储session\n\n              _context3.next = 3;\n              return apiWarp(\"/websocket\", data, \"post\").then(function (res) {\n                console.log(res);\n              }).catch(function (err) {\n                console.log(err);\n              });\n\n            case 3:\n              //建立连接\n              socket.connect(vm);\n              setTimeout(function () {\n                vm.$store.commit(\"changeLayShow\");\n              }, 2000);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function chatConnect(_x5, _x6) {\n      return _chatConnect.apply(this, arguments);\n    }\n\n    return chatConnect;\n  }(),\n  //websocket发送消息\n  chatSend: function chatSend(data, vm) {\n    socket.sendMessageNoParameter(data);\n  },\n  //websocket断开连接\n  chatDisconnect: function chatDisconnect() {\n    socket.disconnect();\n  }\n};\n\nvar apiWarp = function apiWarp(url, data, methods) {\n  return new Promise(\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(resolve, reject) {\n      var target;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              target = config.severAddress + url;\n\n              if (!(methods === \"post\")) {\n                _context4.next = 10;\n                break;\n              }\n\n              _context4.t0 = resolve;\n              _context4.next = 6;\n              return axios.post(target, data);\n\n            case 6:\n              _context4.t1 = _context4.sent;\n              (0, _context4.t0)(_context4.t1);\n              _context4.next = 16;\n              break;\n\n            case 10:\n              if (!(methods === \"get\")) {\n                _context4.next = 16;\n                break;\n              }\n\n              _context4.t2 = resolve;\n              _context4.next = 14;\n              return axios.get(target);\n\n            case 14:\n              _context4.t3 = _context4.sent;\n              (0, _context4.t2)(_context4.t3);\n\n            case 16:\n              _context4.next = 21;\n              break;\n\n            case 18:\n              _context4.prev = 18;\n              _context4.t4 = _context4[\"catch\"](0);\n              reject(_context4.t4);\n\n            case 21:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 18]]);\n    }));\n\n    return function (_x7, _x8) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n};",{"version":3,"sources":["C:\\Users\\tyt\\Desktop\\编程\\vscode\\华北五省\\goods_project\\src\\api\\message.js"],"names":["axios","config","socket","freshMessage","data","vm","$store","commit","apiWarp","then","res","console","log","userList","catch","err","setTimeout","specificMessage","forEach","val","fromUser","friendName","chatRoom","list","push","component","content","$notify","type","message","chatConnect","connect","chatSend","sendMessageNoParameter","chatDisconnect","disconnect","url","methods","Promise","resolve","reject","target","severAddress","post","get"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport config from \"@/config/config.json\";\r\nimport socket from \"./websocket\";\r\n\r\nexport default {\r\n  //请求所有信息\r\n  async freshMessage(data, vm) {\r\n    vm.$store.commit(\"changeLayShow\");\r\n\r\n    await apiWarp(\"/findByUserName\", data, \"post\")\r\n      .then((res) => {\r\n        console.log(res);\r\n        let data = res.data;\r\n        //插入数据\r\n        vm.userList = data;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    setTimeout(() => {\r\n      vm.$store.commit(\"changeLayShow\");\r\n    }, 500);\r\n  },\r\n  //具体历史信息\r\n  async specificMessage(data, vm) {\r\n    vm.$store.commit(\"changeLayShow\");\r\n\r\n    await apiWarp(\"/findChatRecord\", data, \"post\")\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data != null) {\r\n          res.data.forEach((val) => {\r\n            if (val.fromUser === data.friendName) { //好友发送的消息\r\n              vm.chatRoom.list.push({\r\n                component: 'leftMsg',\r\n                content: val.content\r\n              })\r\n            } else { //用户自己发送的消息\r\n              vm.chatRoom.list.push({\r\n                component: 'rightMsg',\r\n                content: val.content\r\n              })\r\n            }\r\n          })\r\n        } else {\r\n          vm.$notify({\r\n            type: \"warning\",\r\n            message: '连接错误',\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    setTimeout(() => {\r\n      vm.$store.commit(\"changeLayShow\");\r\n    }, 500);\r\n  },\r\n\r\n  //websocket连接交流\r\n  async chatConnect(data, vm) {\r\n    vm.$store.commit(\"changeLayShow\");\r\n    //存储session\r\n    await apiWarp(\"/websocket\", data, \"post\")\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    //建立连接\r\n    socket.connect(vm);\r\n\r\n    setTimeout(() => {\r\n      vm.$store.commit(\"changeLayShow\");\r\n    }, 2000);\r\n  },\r\n\r\n  //websocket发送消息\r\n  chatSend(data, vm) {\r\n    socket.sendMessageNoParameter(data)\r\n  },\r\n\r\n  //websocket断开连接\r\n  chatDisconnect() {\r\n    socket.disconnect()\r\n  }\r\n};\r\n\r\nconst apiWarp = (url, data, methods) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      let target = config.severAddress + url;\r\n      if (methods === \"post\") {\r\n        resolve(await axios.post(target, data));\r\n      } else if (methods === \"get\") {\r\n        resolve(await axios.get(target));\r\n      }\r\n    } catch (err) {\r\n      reject(err);\r\n    }\r\n  });\r\n};"]}]}